{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAIb,IAAI,OAAO,GAAO,OAAO,CAAC,SAAS,CAAC,EAChC,UAAU,GAAI,OAAO,CAAC,aAAa,CAAC,EACpC,EAAE,GAAY,OAAO,CAAC,IAAI,CAAC,EAC3B,GAAG,GAAW,OAAO,EAAE,EACvB,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,EACnC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAC5C,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEpC,MAAM,KAAK,GAAa,IAAI,GAAG,EAAE,CAAC;AAElC,0CAAyC;AAGzC,SAAS,gBAAgB,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI;IAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACjD,IAAI,EAAE,CAAC;AACX,CAAC;AAED,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3B,MAAM;AACN,GAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI;IAC3B,GAAG,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;IAC/C,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,6EAA6E,CAAC,CAAC;IAC1H,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,mCAAmC,CAAC,CAAC;IAChF,IAAI,EAAE,CAAC;AACX,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAW,CAAC,KAAK,CAAC,CAAC,CAAC;AAEtC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAE,EAAE;IACjB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAA;AACzC,CAAC,CAAC,CAAC","sourcesContent":["\"use strict\";\r\n\r\nimport {IUserMap} from \"./interface/login.interface\";\r\n\r\nvar express     = require('express'),\r\n    bodyParser  = require('body-parser'),\r\n    fs          = require('fs'),\r\n    app         = express(),\r\n    inContainer = process.env.CONTAINER,\r\n    inAzure = process.env.WEBSITE_RESOURCE_GROUP,\r\n    notDevelop = process.argv.slice(2)[0],\r\n    port = process.env.PORT || 3000;\r\n\r\nconst users: IUserMap = new Map();\r\n\r\nimport arboxRouter from './routes/arbox';\r\n\r\n\r\nfunction loggerMiddleware(request, response, next) {\r\n    console.log(`${request.method} ${request.path}`);\r\n    next();\r\n}\r\n\r\napp.use(loggerMiddleware);\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n\r\n//CORS\r\napp.use(function(req, res, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, Authorization, X-Requested-With, X-XSRF-TOKEN, Content-Type, Accept\");\r\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,PATCH,OPTIONS');\r\n    next();\r\n});\r\n\r\napp.use('/arbox', arboxRouter(users));\r\n\r\napp.listen(port, ()=>{\r\n    console.log('starting on port', port)\r\n});\r\n"]}