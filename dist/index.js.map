{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,EAC5B,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,EACnC,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,EAClB,GAAG,GAAG,OAAO,EAAE,EACf,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,EACnC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAC5C,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEpC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,2DAA4D;AAC5D,0CAAyC;AAEzC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,aAAa;AACb,EAAE,CAAC,QAAQ,CAAC,oBAAoB,EAAE,MAAM,EAAE,UAAU,GAAG,EAAE,IAAI;IACzD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEtB,IAAI,GAAG;QAAE,MAAM,GAAG,CAAC;IAGnB,MAAM,iBAAiB,GAAG,IAAI,qCAAoB,EAAE,CAAC;IACrD,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAEpC,SAAS,gBAAgB,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI;QAC7C,mDAAmD;QACnD,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,IAAI,EAAE,CAAC;IACX,CAAC;IAED,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC1B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;IACjD,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAEhB,IAAI,cAAc,GAAG,CAAC,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,kBAAkB;QAC/G,wBAAwB,CAAC,CAAC;IAE9B,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;QACT,MAAM,EAAE,UAAU,MAAM,EAAE,QAAQ;YAC9B,gCAAgC;YAChC,sCAAsC;YACtC,IAAI,CAAC,MAAM;gBAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACzC,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;gBACvC,IAAI,GAAG,GAAG,yCAAyC;oBAC/C,yCAAyC,CAAC;gBAC9C,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;aAC1C;YACD,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC;KACJ,CAAC,CAAC,CAAC;IAEJ,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAClD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACtB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC,CAAC,CAAA;IACF,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QAClB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAA;IACzC,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["var express = require('express'),\r\n    bodyParser = require('body-parser'),\r\n    fs = require('fs'),\r\n    app = express(),\r\n    inContainer = process.env.CONTAINER,\r\n    inAzure = process.env.WEBSITE_RESOURCE_GROUP,\r\n    notDevelop = process.argv.slice(2)[0],\r\n    port = process.env.PORT || 3000;\r\n\r\nvar cors = require('cors');\r\nimport {ArboxScheduleService} from \"./utils/arbox-schedule\";\r\nimport arboxRouter from './routes/arbox';\r\n\r\nconsole.log('before');\r\n// @ts-ignore\r\nfs.readFile(\"src/data/data.json\", \"utf8\", function (err, data) {\r\n    console.log('before');\r\n\r\n    if (err) throw err;\r\n\r\n\r\n    const arboxUserSchedule = new ArboxScheduleService();\r\n    arboxUserSchedule.restoreData(data);\r\n\r\n    function loggerMiddleware(request, response, next) {\r\n        //console.log(`${request.method} ${request.path}`);\r\n        console.log();\r\n        next();\r\n    }\r\n\r\n    app.use(loggerMiddleware);\r\n    app.use(bodyParser.urlencoded({extended: true}));\r\n    app.use(bodyParser.json());\r\n    app.use(cors());\r\n\r\n    var allowedOrigins = ['http://localhost:3000', 'http://localhost:8080', 'http://localhost:8100', 'http://localhost',\r\n        'http://localhost:8100/'];\r\n\r\n    app.use(cors({\r\n        origin: function (origin, callback) {\r\n            // allow requests with no origin\r\n            // (like mobile apps or curl requests)\r\n            if (!origin) return callback(null, true);\r\n            if (allowedOrigins.indexOf(origin) === -1) {\r\n                var msg = 'The CORS policy for this site does not ' +\r\n                    'allow access from the specified Origin.';\r\n                return callback(new Error(msg), false);\r\n            }\r\n            return callback(null, true);\r\n        }\r\n    }));\r\n\r\n    app.use('/arbox', arboxRouter(arboxUserSchedule));\r\n    app.get('/', (req, res) => {\r\n        res.send('hello')\r\n    })\r\n    app.listen(port, () => {\r\n        console.log('starting on port', port)\r\n    });\r\n\r\n});"]}