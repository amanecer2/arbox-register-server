{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,IAAI,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAC1C,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAC,EAAE;IACrB,GAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,OAAO,EAAC,CAAC,CAAA;AAC/B,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,GAAE,EAAE;IACvB,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAE,UAAU,CAAC,CAAC;AACvD,CAAC,CAAC,CAAA;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4DK","sourcesContent":["import * as express from 'express';\r\nconst app = express();\r\n\r\nlet listenPort = process.env.PORT || 3000;\r\napp.get('/', (req, res)=> {\r\n    res.json({'helo': 'workl'})\r\n})\r\napp.listen(listenPort, ()=> {\r\n    console.log(\"server running on port \"+ listenPort);\r\n})\r\n\r\n/*\r\nimport {rescheduleJob} from \"node-schedule\";\r\n\r\nvar express = require('express'),\r\n    bodyParser = require('body-parser'),\r\n    fs = require('fs'),\r\n    app = express(),\r\n    inContainer = process.env.CONTAINER,\r\n    inAzure = process.env.WEBSITE_RESOURCE_GROUP,\r\n    notDevelop = process.argv.slice(2)[0],\r\n    port = process.env.PORT || 3000;\r\n\r\nvar cors = require('cors');\r\nimport {ArboxScheduleService} from \"./utils/arbox-schedule\";\r\nimport arboxRouter from './routes/arbox';\r\n\r\nconsole.log('before');\r\n// @ts-ignore\r\nfs.readFile(\"src/data/data.json\", \"utf8\", function (err, data) {\r\n    console.log('before');\r\n\r\n    if (err) throw err;\r\n\r\n\r\n    const arboxUserSchedule = new ArboxScheduleService();\r\n    arboxUserSchedule.restoreData(data);\r\n\r\n    function loggerMiddleware(request, response, next) {\r\n        //console.log(`${request.method} ${request.path}`);\r\n        console.log();\r\n        next();\r\n    }\r\n\r\n    app.use(loggerMiddleware);\r\n    app.use(bodyParser.urlencoded({extended: true}));\r\n    app.use(bodyParser.json());\r\n\r\n    var allowedOrigins = ['http://localhost:3000', 'http://localhost:8080', 'http://localhost:8100', 'http://localhost',\r\n        'http://localhost:8100/'];\r\n\r\n    app.use(cors({\r\n        origin: function (origin, callback) {\r\n            // allow requests with no origin\r\n            // (like mobile apps or curl requests)\r\n            if (!origin) return callback(null, true);\r\n            if (allowedOrigins.indexOf(origin) === -1) {\r\n                var msg = 'The CORS policy for this site does not ' +\r\n                    'allow access from the specified Origin.';\r\n                return callback(new Error(msg), false);\r\n            }\r\n            return callback(null, true);\r\n        }\r\n    }));\r\n\r\n    app.use('/arbox', arboxRouter(arboxUserSchedule));\r\n\r\n    app.listen(port, () => {\r\n        console.log('starting on port', port)\r\n    });\r\n\r\n});*/\r\n"]}