{"version":3,"file":"_index.js","sourceRoot":"","sources":["../src/_index.ts"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;AACb,uCAAgC;AAChC,iCAA0B;AAE1B,oDAA+C;AAC/C,gEAAkD;AAClD,uDAAkD;AAElD,MAAM,QAAQ,GAAG,eAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAGlC,SAAe,aAAa;;QACxB,MAAM,MAAM,GAAG,MAAM,iBAAM,CAAC;YACxB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,wBAAM,CAAC,SAAS;YACtB,OAAO,EAAE,qCAAqC;YAC9C,OAAO,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,qBAAS,CAAC,EAAE,wBAAM,CAAC,IAAI,CAAC;SACpD,CAAQ,CAAC;QAEV,MAAM,aAAa,GAAG,MAAM,CAAC,wBAAM,CAAC,SAAS,CAAC,CAAC;QAE/C,IAAI,aAAa,KAAK,wBAAM,CAAC,IAAI,EAAE;YAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACnD,OAAM;SACT;QACD,IAAI,MAAM,GAAG,MAAM,CAAC,wBAAM,CAAC,SAAS,CAAQ,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,wCAAwC,CAAC,CAAC,CAAC;QAChE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,wCAAwC,CAAC,CAAC,CAAC;QAEhE,2BAAY,CAAC,aAAa,CAAC,CAAC;QAE5B;;;;;;;;;;;WAWG;QACH,OAAM;IACV,CAAC;CAAA;AAAA,CAAC;AAGF,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC","sourcesContent":["#!/usr/bin/env node\r\n\"use strict\";\r\nimport {prompt} from 'inquirer';\r\nimport chalk from 'chalk';\r\n\r\nimport {questions}  from './resource/questions'\r\nimport {STRING} from \"./constant/string.constant\";\r\nimport {answerHandle} from \"./utils/answer.utils\";\r\n\r\nconst response = chalk.bold.green;\r\n\r\n\r\nasync function resumeHandler () {\r\n    const answer = await prompt({\r\n        type: \"list\",\r\n        name: STRING.QUESTIONS,\r\n        message: \"Please fill the following questions\",\r\n        choices: [...Object.keys(questions), STRING.EXIT]\r\n    }) as any;\r\n\r\n    const resumeOptions = answer[STRING.QUESTIONS];\r\n\r\n    if (resumeOptions === STRING.EXIT) {\r\n        console.log(response(\"Thank you, see you latter\"));\r\n        return\r\n    }\r\n    var option = answer[STRING.QUESTIONS] as any;\r\n    console.log(response(\"--------------------------------------\"));\r\n    console.log(option);\r\n    console.log(response(\"--------------------------------------\"));\r\n\r\n    answerHandle(resumeOptions);\r\n\r\n    /*const choice: any = await prompt({\r\n        type: \"list\",\r\n        name: \"exitBack\",\r\n        message: \"Go back or Exit?\",\r\n        choices: [\"Back\", \"Exit\"]\r\n    });\r\n\r\n    if (choice.exitBack == \"Back\") {\r\n        resumeHandler();\r\n    } else {\r\n      return;\r\n    }*/\r\n    return\r\n};\r\n\r\n\r\nresumeHandler().then().catch();"]}